import { BaseScene, SceneContext, SceneSessionData } from "telegraf/typings/scenes";
import { errorHandlerWithLogger } from "../scenes/utils";

export const unexceptedUserInputHandler = (
  scenes: BaseScene<SceneContext<SceneSessionData>>[],
) => {
  scenes.forEach((scene) => {
    scene.on("audio", async (ctx) => {
      try {
        await ctx.replyWithHTML(
          "–û–≥–æ, –∫–∞–∫–∞—è –∫—Ä—É—Ç–∞—è –ø–µ—Å–Ω—è!\nüéµ–Ø –æ—Ü–µ–Ω–∏–ª —Ç–≤–æ–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –≤–∫—É—Åüéµ",
        );
      } catch (error) {
        await errorHandlerWithLogger({ ctx, error, about: "on audio" });
      }
    });

    scene.on("sticker", async (ctx) => {
      try {
        await ctx.replyWithHTML("–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä...");
      } catch (error) {
        await errorHandlerWithLogger({ ctx, error, about: "on sticker" });
      }
    });
  });
};
